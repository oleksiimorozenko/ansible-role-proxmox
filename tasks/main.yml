---
# tasks file for proxmox
- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Remove Proxmox enterprise repo from apt
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/pve-enterprise.list
    state: absent

- name: Remove CEPH enterprise repo from apt
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/ceph.list
    state: absent

- name: Add Proxmox VE no subscription repo
  ansible.builtin.apt_repository:
    filename: pve-no-subscription
    repo: >-
      deb http://download.proxmox.com/debian/pve
        bookworm pve-no-subscription
    state: present

- name: Update package cache
  ansible.builtin.apt:
    update_cache: true

- name: Aptitude safe upgrade
  become: true
  ansible.builtin.apt:
    update_cache: false
    upgrade: safe

- name: Install useful packages
  ansible.builtin.apt:
    update_cache: false
    pkg:
      - jq
      - libguestfs-tools
      - mc
      - python3-bs4

- name: Install vim
  ansible.builtin.package:
    name: vim
    state: present

- name: Copy vimrc.local file
  ansible.builtin.copy:
    src: "{{ role_path }}/files/etc/vim/vimrc.local"
    dest: /etc/vim/vimrc.local
    mode: '644'

- name: Remove useless packages from the cache
  ansible.builtin.apt:
    autoclean: true

- name: Remove dependencies that are no longer required
  ansible.builtin.apt:
    autoremove: true

- name: Check if hush login enabled
  ansible.builtin.stat:
    path: "{{ ansible_facts.env.HOME }}/.hushlogin"
  register: hushlogin_stat

- name: Enable hush login
  when: not hushlogin_stat.stat.exists
  ansible.builtin.file:
    path: "{{ ansible_facts.env.HOME }}/.hushlogin"
    state: touch
    mode: '644'

- name: Add proxmoxlib.js path to variable
  ansible.builtin.set_fact:
    proxmoxlib_path: >-
      /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js

- name: Check proxmoxlib.js.bak exists
  ansible.builtin.stat:
    path: "{{ proxmoxlib_path }}.bak"
  register: pmx_js_bak

- name: Make backup from proxmoxlib.js
  when: not pmx_js_bak.stat.exists
  ansible.builtin.copy:
    src: "{{ proxmoxlib_path }}"
    dest: "{{ proxmoxlib_path }}.bak"
    remote_src: true
    mode: '644'

- name: Remove no valid sub popup
  ansible.builtin.replace:
    path: "{{ proxmoxlib_path }}"
    regexp: >-
      (^\s+)(Ext.Msg.show\(\{\s+title:\s+gettext\('No valid subscription)
    replace: '\1void({ //\2'
  notify: Restart pveproxy

- name: Enable IOMMU (Intel)
  when: >-
    ansible_facts.processor |
      list |
      intersect(['GenuineIntel']) |
      length > 0
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    search_string: GRUB_CMDLINE_LINUX_DEFAULT
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet intel_iommu=on"'
    state: present
  notify: Update grub

- name: Get available Proxmox LXC templates
  ansible.builtin.command:
    cmd: pveam update
  changed_when: false

- name: List available Ubuntu LXC templates
  ansible.builtin.shell:
    cmd: pveam available --section system | awk '{print $2}' | grep -E '^ubuntu'
  register: lxc_templates
  changed_when: false
